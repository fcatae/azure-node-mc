{"version":3,"sources":["lib/behavior.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAK;AACxB,SAAO,oBAAO,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU;QACzC,eAAe,EACf,SAAS,EACT,WAAW,EACX,aAAa,EACX,MAAM,EASR,IAAI;;;;AAbJ,yBAAe,GAAG,KAAK;AACvB,mBAAS,GAAG,KAAK;AACjB,qBAAW,GAAG,CAAC;AACf,uBAAa,GAAG,IAAI;;AAClB,gBAAM,GAAG,SAAT,MAAM,GAA8B;gBAA1B,EAAE,yDAAC,IAAI;gBAAE,MAAM,yDAAC,KAAK;;AACnC,gBAAI,MAAM,EAAE,eAAe,GAAG,IAAI,CAAC,KAC9B;AACH,uBAAS,GAAG,IAAI,CAAC;AACjB,yBAAW,EAAE,CAAC;aACf;AACD,yBAAa,GAAG,EAAE,CAAC;WACpB;;AAEG,cAAI;;2CAEF,GAAG,CAAC,QAAQ,CAAC,SAAS,GAAG,SAAS,EAAE,IAAI,EAAE,MAAM,CAAC,SAAM,CAAC,UAAC,GAAG;mBAAI,UAAU,CAAC,YAAM;AAAC,oBAAM,GAAG,CAAC;aAAC,EAAC,CAAC,CAAC;WAAA,CAAC;;;;2CACjG,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,CAAC,SAAM,CAAC,UAAC,GAAG;mBAAI,UAAU,CAAC,YAAM;AAAC,oBAAM,GAAG,CAAC;aAAC,EAAC,CAAC,CAAC;WAAA,CAAC;;;gBAEvG,CAAC,eAAe,IAAI,CAAC,SAAS,CAAA;;;;;AAChC,cAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;;gBACd,IAAI,qBAAmB;;;;;;2CAAe,IAAI,SAAM,CAAC,UAAC,GAAG;mBAAI,UAAU,CAAC,YAAM;AAAC,oBAAM,GAAG,CAAC;aAAC,EAAC,CAAC,CAAC;WAAA,CAAC;;;AAAjE,cAAI;;;AACjC,cAAI,OAAO,IAAI,IAAI,WAAW,EAAE,IAAI,GAAG,IAAI,CAAC;;;;;gBACnC,UAAU,IAAI,aAAa,CAAA;;;;;AACpC,cAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;;gBACpB,IAAI,qBAAmB;;;;;;2CAAe,IAAI,SAAM,CAAC,UAAC,GAAG;mBAAI,UAAU,CAAC,YAAM;AAAC,oBAAM,GAAG,CAAC;aAAC,EAAC,CAAC,CAAC;WAAA,CAAC;;;AAAjE,cAAI;;;AACjC,cAAI,OAAO,IAAI,IAAI,WAAW,EAAE,IAAI,GAAG,KAAK,CAAC;;;;2CAEzC,GAAG,CAAC,QAAQ,CAAC,SAAS,GAAG,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,SAAM,CAAC,UAAC,GAAG;mBAAI,UAAU,CAAC,YAAM;AAAC,oBAAM,GAAG,CAAC;aAAC,EAAC,CAAC,CAAC;WAAA,CAAC;;;8CAEjG,IAAI;;;;;;;GACZ,CAAA;CACF,CAAC","file":"lib/behavior.js","sourcesContent":["module.exports = (obj) => {\n  return async (eventName, data, func, cancelFunc) => {\n    let hiddenCancelled = false;\n    let cancelled = false;\n    let cancelCount = 0;\n    let defaultCancel = true;\n    const cancel = (dC=true, hidden=false) => { // Hidden shouldn't be used often but it's not hard to implement so meh\n      if (hidden) hiddenCancelled = true;\n      else {\n        cancelled = true;\n        cancelCount++;\n      }\n      defaultCancel = dC;\n    };\n    \n    let resp;\n\n    await obj.emitThen(eventName + '_cancel', data, cancel).catch((err)=> setTimeout(() => {throw err;},0));\n    await obj.emitThen(eventName, data, cancelled, cancelCount).catch((err)=> setTimeout(() => {throw err;},0));\n\n    if (!hiddenCancelled && !cancelled) {\n      resp = func(data);\n      if (resp instanceof Promise) resp = await resp.catch((err)=> setTimeout(() => {throw err;},0));\n      if (typeof resp == 'undefined') resp = true;\n    } else if (cancelFunc && defaultCancel) {\n      resp = cancelFunc(data);\n      if (resp instanceof Promise) resp = await resp.catch((err)=> setTimeout(() => {throw err;},0));\n      if (typeof resp == 'undefined') resp = false;\n    }\n    await obj.emitThen(eventName + '_done', data, cancelled).catch((err)=> setTimeout(() => {throw err;},0));\n\n    return resp;\n  }\n};"],"sourceRoot":"/source/"}