{"version":3,"sources":["lib/portal_detector.js"],"names":[],"mappings":"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","file":"lib/portal_detector.js","sourcesContent":["const Vec3 = require(\"vec3\").Vec3;\nconst assert = require('assert');\nconst flatMap = require('flatmap');\nconst range = require('range').range;\n\nmodule.exports={detectFrame,findPotentialLines,findBorder,getAir,generateLine,generatePortal,addPortalToWorld,makeWorldWithPortal};\n\nasync function findLineInDirection(world,startingPoint,type,direction,directionV)\n{\n  const line=[];\n  let point=startingPoint;\n  while((await world.getBlock(point)).name==type && (await world.getBlockType(point.plus(directionV)))==0)\n  {\n    line.push(point);\n    point=point.plus(direction);\n  }\n  return line;\n}\n\nasync function findLine(world,startingPoint,type,direction,directionV)\n{\n  const firstSegment=(await findLineInDirection(world,startingPoint.plus(direction.scaled(-1)),type,direction.scaled(-1),directionV)).reverse();\n  const secondSegment=await findLineInDirection(world,startingPoint,type,direction,directionV);\n  return firstSegment.concat(secondSegment);\n}\n\n\nasync function findPotentialLines(world,startingPoint,directionV)\n{\n  const firstLineDirection=directionV.y!=0 ? [new Vec3(1,0,0),new Vec3(0,0,1)] :\n    [new Vec3(0,1,0)];\n  return (await Promise.all(firstLineDirection\n    .map(async d => ({direction:d,line:(await findLine(world,startingPoint,'obsidian',d,directionV))}))))\n    .filter(line => (line.line.length>=3 && line.direction.y!=0) ||\n    (line.line.length>=2 && line.direction.y==0));\n}\n\nfunction positiveOrder(line,direction)\n{\n  if(direction.x==-1 || direction.y==-1 || direction.z==-1)\n    return line.reverse();\n  return line;\n}\n\nasync function findBorder(world,{line,direction},directionV)\n{\n  let bottom=line;\n  if(bottom.length==0)\n    return [];\n  let left=await findLineInDirection(world,bottom[0].plus(direction.scaled(-1).plus(directionV)),'obsidian',directionV,direction);\n  let right=await findLineInDirection(world,bottom[line.length-1].plus(direction).plus(directionV),'obsidian',\n    directionV,direction.scaled(-1));\n  if(left.length==0 || left.length!=right.length)\n    return null;\n  let top=await findLineInDirection(world,left[left.length-1].plus(direction).plus(directionV),'obsidian',\n    direction,directionV.scaled(-1));\n  if(bottom.length!=top.length)\n    return null;\n\n  left=positiveOrder(left,directionV);\n  right=positiveOrder(right,directionV);\n  top=positiveOrder(top,direction);\n\n\n  if(direction.y!=0)\n    [bottom,left,right,top]=[left,bottom,top,right];\n\n  [bottom,top]=directionV.y<0 ? [top,bottom] : [bottom,top];\n  const horDir=direction.x!=0 || directionV.x!=0 ? 'x' :'z';\n  [left,right]=direction[horDir]<0 || directionV[horDir]<0 ? [right,left] : [left,right];\n\n  if(bottom.length<2 || top.length<2 || left.length<3 || right.length<3)\n    return null;\n\n  return {bottom,left,right,top};\n}\n\nasync function detectFrame(world,startingPoint,directionV)\n{\n  let potentialLines=await findPotentialLines(world,startingPoint,directionV);\n\n  return asyncFilter((await Promise.all(potentialLines\n    .map(line => findBorder(world,line,directionV))))\n    .filter(border => border!=null)\n    .map(({bottom,left,right,top}) => ({bottom,left,right,top,air:getAir({bottom,left,right,top})})),\n    async ({air}) => await isAllAir(world,air));\n}\n\nasync function asyncEvery(array,pred) {\n  return Promise.all(array.map(x => pred(x).then(y => y ? true : Promise.reject(false))))\n    .then(results => true)\n    .catch(x => false);\n}\n\nfunction asyncFilter(array,pred) {\n  return Promise.all(array.map(e => pred(e).then(a => a ? e : null))).then(r => r.filter(a => a!=null));\n}\n\nasync function isAllAir(world,blocks)\n{\n  return asyncEvery(blocks,async block => (await world.getBlockType(block))==0);\n}\n\nfunction getAir(border)\n{\n  const {bottom,top}=border;\n  return flatMap(bottom,pos => range(1,top[0].y-bottom[0].y).map(i => pos.offset(0,i,0)));\n}\n\n\nconst World = require('prismarine-world');\nconst Chunk = require('prismarine-chunk')(require(\"./version\"));\n\nfunction generateLine(startingPoint,direction,length) {\n  return range(0,length).map(i => startingPoint.plus(direction.scaled(i)));\n}\n\nfunction generatePortal(bottomLeft,direction,width,height){\n  const directionV=new Vec3(0,1,0);\n  return {\n    bottom:generateLine(bottomLeft.plus(direction),direction,width-2),\n    left:generateLine(bottomLeft.plus(directionV),directionV,height-2),\n    right:generateLine(bottomLeft.plus(direction.scaled(width-1)).plus(directionV),directionV,height-2),\n    top:generateLine(bottomLeft.plus(directionV.scaled(height-1).plus(direction)),direction,width-2),\n    air:flatMap(generateLine(bottomLeft.plus(direction).plus(directionV),direction,width-2),\n      p => generateLine(p,directionV,height-2))\n  }\n}\n\nfunction addPortalToWorld(world,portal,additionalAir,additionalObsidian,setBlockType=null)\n{\n  if(setBlockType==null)\n    setBlockType=world.setBlockType.bind(world);\n  const {bottom,left,right,top,air}=portal;\n\n  const p=flatMap([bottom,left,right,top],border => border.map(pos => setBlockType(pos,49)));\n  p.push(air.map(pos => setBlockType(pos,0)));\n\n  p.push(additionalAir.map(pos => setBlockType(pos,0)));\n  p.push(additionalObsidian.map(pos => setBlockType(pos,49)));\n\n  return Promise.all(p);\n}\n\n\nasync function makeWorldWithPortal(portal,additionalAir,additionalObsidian)\n{\n  const world=new World(() => new Chunk());\n  await addPortalToWorld(world,portal,additionalAir,additionalObsidian);\n\n  return world;\n}"],"sourceRoot":"/source/"}