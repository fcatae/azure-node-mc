{"version":3,"sources":["lib/plugins/blocks.js"],"names":[],"mappings":";;;;AAAA,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;;AAElC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,UAAS,MAAM,EAAC,IAAI,EAC1C;;;AACE,QAAM,CAAC,WAAW,GAAC,oBAAO,QAAQ,EAAC,SAAS,EAAC,SAAS;;;;AAEpD,cAAI,CAAC,OAAO,CACT,MAAM,CAAC,UAAA,CAAC;mBAAI,CAAC,CAAC,KAAK,IAAE,MAAM,CAAC,KAAK,IAAI,MAAM,IAAE,CAAC;WAAA,CAAC,CAC/C,OAAO,CAAC,UAAA,CAAC;mBAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC;WAAA,CAAC,CAAC;;;2CAEvD,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAC,SAAS,CAAC;;;;2CAC7C,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAC,SAAS,CAAC;;;;;;;GACpD,CAAC;;AAEF,QAAM,CAAC,SAAS,GAAG,UAAC,QAAQ,EAAE,SAAS,EAAE,SAAS;;AAChD,YAAM,CAAC,QAAQ,CAAC,WAAW,EAAE;AAC3B,gBAAQ,EAAE,QAAQ;AAClB,iBAAS,EAAE,SAAS;AACpB,iBAAS,EAAE,SAAS;OACrB,EAAE,UAAC,IAAgC,EAAK;YAApC,QAAQ,GAAT,IAAgC,CAA/B,QAAQ;YAAE,SAAS,GAApB,IAAgC,CAArB,SAAS;YAAE,SAAS,GAA/B,IAAgC,CAAV,SAAS;;AACjC,cAAM,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,EAAC;AAClC,kBAAQ,EAAC,QAAQ;AACjB,cAAI,EAAC,SAAS,IAAE,CAAC,GAAG,SAAS;SAC9B,CAAC,CAAC;OACJ,CAAC;;GAAA,CAAC;;AAGL,QAAM,CAAC,QAAQ,GAAG,UAAC,QAAQ,EAAC,SAAS,EAAC,SAAS;WAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAC,QAAQ,EAAC,SAAS,EAAC,SAAS,CAAC;GAAA,CAAC;;AAG7G,QAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;AAClB,QAAI,EAAE,UAAU;AAChB,QAAI,EAAE,2BAA2B;AACjC,SAAK,EAAE,mCAAmC;AAC1C,MAAE,EAAE,IAAI;AACR,SAAK,EAAA,eAAC,GAAG,EAAE;AACT,UAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,8EAA8E,CAAC,CAAC;AAC1G,UAAG,CAAC,OAAO,EAAE,OAAO,KAAK,CAAC;AAC1B,aAAO,OAAO,CAAC;KAChB;AACD,UAAM,EAAA,gBAAC,MAAM,EAAE;AACb,UAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7B,SAAG,GAAG,GAAG,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,CAAC;eAAK,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;OAAA,CAAC,CAAC;AAC3F,YAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KACxF;GACF,CAAC,CAAC;CACJ,CAAC","file":"lib/plugins/blocks.js","sourcesContent":["const Vec3 = require(\"vec3\").Vec3;\n\nmodule.exports.player=function(player,serv)\n{\n  player.changeBlock=async (position,blockType,blockData) =>\n  {\n    serv.players\n      .filter(p => p.world==player.world && player!=p)\n      .forEach(p => p.sendBlock(position, blockType, blockData));\n\n    await player.world.setBlockType(position,blockType);\n    await player.world.setBlockData(position,blockData);\n  };\n  \n  player.sendBlock = (position, blockType, blockData) =>  // Call from player.setBlock unless you want \"local\" fake blocks\n    player.behavior('sendBlock', {\n      position: position,\n      blockType: blockType,\n      blockData: blockData\n    }, ({position, blockType, blockData}) => {\n      player._client.write(\"block_change\",{\n        location:position,\n        type:blockType<<4 | blockData\n      });\n    });\n    \n\n  player.setBlock = (position,blockType,blockData) => serv.setBlock(player.world,position,blockType,blockData);\n\n\n  player.commands.add({\n    base: 'setblock',\n    info: 'set a block at a position',\n    usage: '/setblock <x> <y> <z> <id> [data]',\n    op: true,\n    parse(str) {\n      const results = str.match(/^(~|~?-?[0-9]+) (~|~?-?[0-9]+) (~|~?-?[0-9]+) ([0-9]{1,3})(?: ([0-9]{1,3}))?/);\n      if(!results) return false;\n      return results;\n    },\n    action(params) {\n      let res = params.slice(1, 4);\n      res = res.map((val, i) => serv.posFromString(val, player.position[['x','y','z'][i]] / 32));\n      player.setBlock(new Vec3(res[0], res[1], res[2]).floored(), params[4], params[5] || 0);\n    }\n  });\n};"],"sourceRoot":"/source/"}