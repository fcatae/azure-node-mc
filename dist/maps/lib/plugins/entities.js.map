{"version":3,"sources":["lib/plugins/entities.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,UAAS,IAAI,EAAE;AACnC,MAAI,OAAO,GAAC,KAAK,CAAC;AAClB,MAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,KAAK,EAAE;;;AAC9B,QAAG,OAAO,IAAI,KAAK,GAAC,CAAC,EACnB,OAAO;AACT,WAAO,GAAC,IAAI,CAAC;AACb,aAAQ,GAAG,CACT,aAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,oBAAO,EAAE;UAChC,MAAM,EAKJ,OAAO,EAUT,cAAc;;;;AAfd,kBAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;;kBAC5B,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAA;;;;;AACtE,kBAAM,CAAC,OAAO,EAAE,CAAC;;;;AAEZ,gBAAI,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,UAAU,EAAE;AAC3E,qBAAO,GAAG,IAAI,CAAC,SAAS,CAAC;AAC7B,qBAAK,EAAE,MAAM,CAAC,KAAK;AACnB,wBAAQ,EAAE,MAAM,CAAC,QAAQ;AACzB,sBAAM,EAAE,GAAG,GAAC,EAAE;eACf,CAAC;;AACF,kBAAI,OAAO,CAAC,MAAM,EAAE;AAClB,uBAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;eAC5B;aACF;;;kBACG,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAA;;;;;;;;;6CACP,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC;;;AAArD,0BAAc;;AACpB,gBAAI,MAAM,CAAC,IAAI,IAAI,KAAK,EAAE,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;;;;;;;KACjG,CAAC,CACH,CACA,IAAI,CAAC;aAAM,OAAO,GAAC,KAAK;KAAA,CAAC,SACpB,CAAC,UAAC,GAAG;aAAI,UAAU,CAAC,YAAM;AAAC,cAAM,GAAG,CAAC;OAAC,EAAC,CAAC,CAAC;KAAA,CAAC,CAAC;GAClD,CAAC,CAAC;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,UAAS,MAAM,EAAC;AACpC,QAAM,CAAC,YAAY,GAAG,UAAC,IAAI,EAAK;AAC9B,UAAM,CAAC,kBAAkB,CAAC,iBAAiB,EAAE;AAC3C,cAAQ,EAAE,MAAM,CAAC,EAAE;AACnB,cAAQ,EAAE,IAAI;KACf,CAAC,CAAC;GACJ,CAAC;;AAEF,QAAM,CAAC,oBAAoB,GAAG,UAAC,IAAI,EAAK;AACtC,UAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;AACvB,UAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;GAC3B,CAAC;CACH,CAAC","file":"lib/plugins/entities.js","sourcesContent":["module.exports.server=function(serv) {\n  let ticking=false;\n  serv.on('tick', function(delta) {\n    if(ticking || delta>1)\n      return;\n    ticking=true;\n    Promise.all(\n      Object.keys(serv.entities).map(async (id) => {\n        const entity = serv.entities[id];\n        if (entity.deathTime && Date.now() - entity.bornTime >= entity.deathTime) {\n          entity.destroy();\n          return;\n        } else if (entity.pickupTime && Date.now() - entity.bornTime >= entity.pickupTime) {\n          const players = serv.getNearby({\n            world: entity.world,\n            position: entity.position,\n            radius: 1.5*32 // Seems good for now\n          });\n          if (players.length) {\n            players[0].collect(entity);\n          }\n        }\n        if (!entity.velocity || !entity.size) return;\n        const posAndOnGround = await entity.calculatePhysics(delta);\n        if (entity.type == 'mob') entity.sendPosition(posAndOnGround.position, posAndOnGround.onGround);\n      })\n    )\n    .then(() => ticking=false)\n    .catch((err)=> setTimeout(() => {throw err;},0));\n  });\n};\n\nmodule.exports.entity=function(entity){\n  entity.sendMetadata = (data) => {\n    entity._writeOthersNearby('entity_metadata', {\n      entityId: entity.id,\n      metadata: data\n    });\n  };\n\n  entity.setAndUpdateMetadata = (data) => {\n    entity.metadata = data;\n    entity.sendMetadata(data);\n  };\n};"],"sourceRoot":"/source/"}