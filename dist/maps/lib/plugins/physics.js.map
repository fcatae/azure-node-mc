{"version":3,"sources":["lib/plugins/physics.js"],"names":[],"mappings":"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","file":"lib/plugins/physics.js","sourcesContent":["const blocks=require(\"minecraft-data\")(require(\"flying-squid\").version).blocks;\nconst Vec3 = require(\"vec3\").Vec3;\n\nmodule.exports.entity=function(entity){\n  entity.calculatePhysics = async (delta) => {\n    if (entity.gravity) {\n      addGravity(entity, 'x', delta);\n      addGravity(entity, 'y', delta);\n      addGravity(entity, 'z', delta);\n    }\n\n    const vSign = getSign(entity.velocity);\n    const sizeSigned = new Vec3(vSign.x * entity.size.x, vSign.y * entity.size.y, vSign.z * entity.size.z);\n\n    const xVec = entity.position.offset(entity.velocity.x*delta + sizeSigned.x/2, 0, 0).scaled(1/32).floored();\n    const yVec = entity.position.offset(0, entity.velocity.y*delta + sizeSigned.y/2, 0).scaled(1/32).floored();\n    const zVec = entity.position.offset(0, 0, entity.velocity.z*delta + sizeSigned.z/2).scaled(1/32).floored();\n\n    // Get block for each (x/y/z)Vec, check to avoid duplicate getBlockTypes\n    const xBlock = blocks[await entity.world.getBlockType(xVec)].boundingBox == 'block';\n    const yBlock = yVec.equals(xVec) ? xBlock : blocks[await entity.world.getBlockType(yVec)].boundingBox == 'block';\n    const zBlock = zVec.equals(yVec) ? yBlock : (zVec.equals(xVec) ? xBlock : blocks[await entity.world.getBlockType(zVec)].boundingBox == 'block');\n\n\n    if (xBlock || yBlock || zBlock) {\n      entity.velocity.x = getFriction(entity.velocity.x, entity.friction.x, delta);\n      entity.velocity.z = getFriction(entity.velocity.z, entity.friction.z, delta);\n    }\n\n    const newPos = entity.position.clone();\n\n    newPos.x += getMoveAmount('x', xBlock, entity, delta, sizeSigned.x);\n    newPos.y += getMoveAmount('y', yBlock, entity, delta, sizeSigned.y);\n    newPos.z += getMoveAmount('z', zBlock, entity, delta, sizeSigned.z);\n\n    //serv.emitParticle(30, serv.overworld, entity.position.scaled(1/32), { size: new Vec3(0, 0, 0) });\n    return { position: newPos, onGround: yBlock}\n  };\n\n  entity.sendVelocity = (vel, maxVel) => {\n    const velocity = vel.scaled(32).floored(); // Make fixed point\n    const maxVelocity = maxVel.scaled(32).floored();\n    const scaledVelocity = velocity.scaled(8000/32/20).floored(); // from fixed-position/second to unit => 1/8000 blocks per tick\n    entity._writeNearby('entity_velocity', {\n      entityId: entity.id,\n      velocityX: scaledVelocity.x,\n      velocityY: scaledVelocity.y,\n      velocityZ: scaledVelocity.z\n    });\n    if (entity.type != 'player') {\n      if (maxVelocity) entity.velocity = addVelocityWithMax(entity.velocity, velocity, maxVelocity);\n      else entity.velocity.add(velocity);\n    }\n  };\n\n\n  function getMoveAmount(dir, block, entity, delta, sizeSigned) {\n    if (block) {\n      entity.velocity[dir] = 0;\n      return Math.floor(-1 * (entity.position[dir] + sizeSigned/2 - floorInDirection(entity.position[dir], -sizeSigned)));\n    } else {\n      return Math.floor(entity.velocity[dir] * delta);\n    }\n  }\n\n  function getSign(vec) {\n    return new Vec3(Math.sign(vec.x), Math.sign(vec.y), Math.sign(vec.z));\n  }\n\n\n  function floorInDirection(a, b) {\n    return b < 0 ? Math.floor(a) : Math.ceil(a);\n  }\n\n\n  function addGravity(entity, dir, delta) {\n    if (entity.velocity[dir] < entity.terminalvelocity[dir] && entity.velocity[dir] > -entity.terminalvelocity[dir]) {\n      entity.velocity[dir] = clamp(-entity.terminalvelocity[dir], entity.velocity[dir] + entity.gravity[dir] * delta, entity.terminalvelocity[dir]);\n    }\n  }\n\n  function getFriction(vel, fric, delta) {\n    return vel > 0 ? Math.max(0, vel - fric*delta) : Math.min(0, vel + fric*delta);\n  }\n\n  function clamp(a, b, c) {\n    return Math.max(a, Math.min(b, c));\n  }\n\n  function addVelocityWithMax(current, newVel, max) {\n    let x, y, z;\n    if (current.x > max.x || current.x < -max.x) x = current.x;\n    else x = Math.max(-max.x, Math.min(max.x, current.x + newVel.x));\n    if (current.y > max.y || current.y < -max.y) y = current.y;\n    else y = Math.max(-max.y, Math.min(max.y, current.y + newVel.y));\n    if (current.z > max.z || current.z < -max.z) z = current.z;\n    else z = Math.max(-max.z, Math.min(max.z, current.z + newVel.z));\n    return new Vec3(x, y, z);\n  }\n};\n\nmodule.exports.player = function(player, serv) {\n  player.commands.add({\n    base: 'velocity',\n    info: 'Push velocity on player(s)',\n    usage: '/velocity <player> <x> <y> <z>',\n    op: true,\n    parse(str) {\n      return str.match(/(.+?) (\\d+) (\\d+) (\\d+)/) || false;\n    },\n    action(params) {\n      const selector = player.selectorString(params[1]);\n      const vec = new Vec3(parseInt(params[2]), parseInt(params[3]), parseInt(params[4]));\n      selector.forEach(e => e.sendVelocity(vec, vec.scaled(5)));\n    }\n  });\n};"],"sourceRoot":"/source/"}