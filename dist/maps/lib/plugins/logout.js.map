{"version":3,"sources":["lib/plugins/logout.js"],"names":[],"mappings":";;;;;;AAAA,IAAM,IAAI,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAEtC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,UAAS,IAAI,EACnC;;;AACE,MAAI,CAAC,IAAI,GAAC;QAAM,MAAM,yDAAC,YAAY;;;;;2CAC3B,SAAQ,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAK;AAC7C,kBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpB,mBAAO,IAAI,CAAC,MAAM,EAAC,cAAc,CAAC,CAAC;WACpC,CAAC,CAAC;;;AACH,cAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;;2CACf,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC,OAAO,CAAC;;;;;;;GACjC,CAAC;CACH,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,UAAS,MAAM,EAAC,IAAI,EAC1C;AACE,QAAM,CAAC,eAAe,GAAG,UAAA,QAAQ;WAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE;AAC1E,iBAAW,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC;eAAI,CAAC,CAAC,EAAE;OAAA,CAAC;KACrC,CAAC;GAAA,CAAC;;AAEH,QAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,YAAM;AAC7B,QAAG,MAAM,EAAE;AACT,UAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAG,iBAAiB,CAAC,CAAC;AACxE,YAAM,CAAC,YAAY,CAAC,aAAa,EAAE;AACjC,cAAM,EAAE,CAAC;AACT,YAAI,EAAE,CAAC;AACL,cAAI,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI;SAC1B,CAAC;OACH,CAAC,CAAC;AACH,YAAM,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,UAAA,WAAW;eAAI,WAAW,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC;OAAA,CAAC,CAAC;AACrF,aAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAChC,YAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC5B,UAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3C,UAAI,KAAK,GAAG,CAAC,CAAC,EAAE;AACd,YAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;OAC/B;AACD,aAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC/C;GACF,CAAC,CAAC;CACJ,CAAC","file":"lib/plugins/logout.js","sourcesContent":["const once = require('event-promise');\n\nmodule.exports.server=function(serv)\n{\n  serv.quit=async(reason=\"Going down\") => {\n    await Promise.all(serv.players.map((player) => {\n      player.kick(reason);\n      return once(player,'disconnected');\n    }));\n    serv._server.close();\n    await once(serv._server,\"close\");\n  };\n};\n\nmodule.exports.player=function(player,serv)\n{\n  player.despawnEntities = entities => player._client.write('entity_destroy', {\n    'entityIds': entities.map(e => e.id)\n  });\n\n  player._client.on('end', () => {\n    if(player) {\n      serv.broadcast(serv.color.yellow + player.username + ' quit the game.');\n      player._writeOthers('player_info', {\n        action: 4,\n        data: [{\n          UUID: player._client.uuid\n        }]\n      });\n      player.nearbyPlayers().forEach(otherPlayer => otherPlayer.despawnEntities([player]));\n      delete serv.entities[player.id];\n      player.emit('disconnected');\n      const index = serv.players.indexOf(player);\n      if (index > -1) {\n        serv.players.splice(index, 1);\n      }\n      delete serv.uuidToPlayer[player._client.uuid];\n    }\n  });\n};"],"sourceRoot":"/source/"}