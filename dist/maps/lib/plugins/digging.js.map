{"version":3,"sources":["lib/plugins/digging.js"],"names":[],"mappings":";;;;AAAA,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;;AAElC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,UAAS,MAAM,EAAC,IAAI,EAC1C;;;AAEE,WAAS,SAAS,CAAC,IAAiB,EAAE;QAAlB,QAAQ,GAAT,IAAiB,CAAhB,QAAQ;QAAE,KAAK,GAAhB,IAAiB,CAAN,KAAK;;AACjC,UAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;GACxD;;AAED,QAAM,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,EAAC,oBAAO,KAAsB;QAArB,QAAQ,GAAT,KAAsB,CAArB,QAAQ;QAAC,MAAM,GAAhB,KAAsB,CAAZ,MAAM;QAAC,IAAI,GAArB,KAAsB,CAAL,IAAI;QACpD,GAAG,EAED,eAAe,EACf,QAAQ,EAGN,UAAU,EACZ,KAAK;;;;AAPP,aAAG,GAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,QAAQ,CAAC,CAAC,EAAC,QAAQ,CAAC,CAAC,CAAC;AAE5C,yBAAe,GAAC,iBAAiB,CAAC,IAAI,CAAC;AACvC,kBAAQ,GAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;;;2CAGb,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC;;;AAAlD,oBAAU;AACZ,eAAK;;gBACN,UAAU,CAAC,IAAI,IAAE,MAAM,CAAA;;;;;AAExB,eAAK,GAAC,UAAU,CAAC;AACjB,aAAG,GAAC,QAAQ,CAAC;;;;;;2CAEE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;;;AAAtC,eAAK;;;;AAEV,2BAAiB,GAAG,KAAK,CAAC;;gBACtB,iBAAiB,CAAC,IAAI,IAAI,CAAC,CAAA;;;;;;;;gBAC3B,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAA;;;;;AACrC,gBAAM,CAAC,QAAQ,CAAC,KAAK,EAAE;AACrB,oBAAQ,EAAE,GAAG;AACb,iBAAK,EAAE,KAAK;WACb,EAAE,UAAC,KAAU,EAAK;gBAAd,QAAQ,GAAT,KAAU,CAAT,QAAQ;;AACX,mBAAO,YAAY,CAAC,QAAQ,CAAC,CAAC;WAC/B,EAAE,SAAS,CAAC,CAAC;;;;;gBACP,MAAM,IAAI,CAAC,CAAA;;;;;AAClB,yBAAe,CAAC,GAAG,CAAC,CAAC;;;;;gBACd,MAAM,IAAI,CAAC,CAAA;;;;;AAClB,gBAAM,CAAC,QAAQ,CAAC,WAAW,EAAE;AAC3B,oBAAQ,EAAE,GAAG;AACb,iBAAK,EAAE,KAAK;WACb,EAAE,UAAC,KAAU,EAAK;gBAAd,QAAQ,GAAT,KAAU,CAAT,QAAQ;;AACX,mBAAO,aAAa,CAAC,QAAQ,CAAC,CAAC;WAChC,CAAC,CAAC;;;;;gBACI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAA;;;;;8CACnC,eAAe,CAAC,GAAG,CAAC;;;;;;;;;;AAG7B,oBAAU,CAAC,YAAM;AAAC,iCAAU;WAAC,EAAC,CAAC,CAAC,CAAC;;;;;;;GAEpC,CAAC,CAAC;;AAEH,WAAS,WAAW,GACpB;;AAEE,WAAO,iBAAiB,CAAC,OAAO,EAAE,CAAC;GACpC;;AAED,MAAI,iBAAiB,YAAA,CAAC;AACtB,MAAI,gBAAgB,YAAA,CAAC;AACrB,MAAI,iBAAiB,YAAA,CAAC;AACtB,MAAI,mBAAmB,YAAA,CAAC;AACxB,MAAI,gBAAgB,YAAA,CAAC;AACrB,MAAI,kBAAkB,YAAA,CAAC;AACvB,WAAS,YAAY,CAAC,QAAQ,EAC9B;AACE,QAAI,CAAC,WAAW,EAAE,CAAC;AACnB,sBAAkB,GAAC,IAAI,CAAC,WAAW,CAAC;AACpC,uBAAmB,GAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC1C,oBAAgB,GAAC,CAAC,CAAC;AACnB,oBAAgB,GAAC,IAAI,IAAI,EAAE,CAAC;AAC5B,mBAAe,EAAE,CAAC;AAClB,qBAAiB,GAAC,WAAW,CAAC,eAAe,EAAC,GAAG,CAAC,CAAC;AACnD,aAAS,eAAe,GACxB;AACE,UAAM,kBAAkB,GAAC,IAAI,IAAI,EAAE,GAAC,gBAAgB,CAAC;AACrD,UAAI,eAAe,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAC,kBAAkB,GAAC,mBAAmB,CAAC,CAAC;AACzE,qBAAe,GAAC,eAAe,GAAC,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC;AACxD,UAAG,eAAe,IAAE,gBAAgB,EACpC;AACE,cAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE;AAChC,mBAAS,EAAE,gBAAgB;AAC3B,eAAK,EAAE,eAAe;AACtB,eAAK,EAAE,YAAY;AACnB,oBAAU,EAAE,kBAAkB;AAC9B,kBAAQ,EAAE,QAAQ;SACnB,EAAE,UAAC,KAAO,EAAK;cAAX,KAAK,GAAN,KAAO,CAAN,KAAK;;AACR,0BAAgB,GAAC,KAAK,CAAC;AACvB,gBAAM,CAAC,kBAAkB,CAAC,uBAAuB,EAAC;AAChD,sBAAU,EAAC,kBAAkB;AAC7B,sBAAU,EAAC,QAAQ;AACnB,0BAAc,EAAC,KAAK;WACrB,CAAC,CAAC;SACJ,CAAC,CAAA;OACH;KACF;GACF;;AAED,WAAS,aAAa,CAAC,QAAQ,EAC/B;AACE,iBAAa,CAAC,iBAAiB,CAAC,CAAC;AACjC,UAAM,CAAC,kBAAkB,CAAC,uBAAuB,EAAC;AAChD,gBAAU,EAAC,kBAAkB;AAC7B,gBAAU,EAAC,QAAQ;AACnB,oBAAc,EAAC,CAAC,CAAC;KAClB,CAAC,CAAC;GACJ;;AAED,WAAe,eAAe,CAAC,QAAQ;QAG/B,WAAW,EACb,IAAI;;;;AAFR,uBAAa,CAAC,iBAAiB,CAAC,CAAC;AAC3B,qBAAW,GAAC,IAAI,IAAI,EAAE,GAAC,gBAAgB;AACzC,cAAI,GAAG,KAAK;;AAChB,cAAG,mBAAmB,GAAC,WAAW,GAAC,GAAG,EAAE;AACtC,gBAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE;AACvC,kBAAI,EAAE,IAAI;AACV,mBAAK,EAAE,gBAAgB;AACvB,kBAAI,EAAE,WAAW;aAClB,CAAC,CAAC,IAAI,CAAC;WACT;AACD,cAAG,CAAC,IAAI,EAAE;AACR,kBAAM,CAAC,QAAQ,CAAC,KAAK,EAAE;AACrB,sBAAQ,EAAE,QAAQ;AAClB,mBAAK,EAAE,iBAAiB;AACxB,uBAAS,EAAE,IAAI;AACf,+BAAiB,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACjD,4BAAc,EAAE,MAAM,CAAC,KAAK;AAC5B,+BAAiB,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,GAAG,CAAC,CAAC;AAC1F,yBAAW,EAAE,iBAAiB,CAAC,IAAI;AACnC,6BAAe,EAAE,iBAAiB,CAAC,QAAQ;AAC3C,6BAAe,EAAE,GAAG;AACpB,4BAAc,EAAE,EAAE,GAAC,CAAC,GAAC,IAAI;aAC1B,EAAE,UAAC,IAAI,EAAK;AACX,oBAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACtC,kBAAI,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;aACrC,EAAE,SAAS,CAAC,CAAA;WACd,MAED;AACE,kBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,EAAC;AAClC,sBAAQ,EAAC,QAAQ;AACjB,kBAAI,EAAC,iBAAiB,CAAC,IAAI,IAAE,CAAC;aAC/B,CAAC,CAAC;WACJ;;;;;;;GACF;;AAED,WAAS,SAAS,CAAC,KAAqH,EAAE;QAAtH,iBAAiB,GAAlB,KAAqH,CAApH,iBAAiB;QAAE,cAAc,GAAlC,KAAqH,CAAjG,cAAc;QAAE,iBAAiB,GAArD,KAAqH,CAAjF,iBAAiB;QAAE,WAAW,GAAlE,KAAqH,CAA9D,WAAW;QAAE,eAAe,GAAnF,KAAqH,CAAjD,eAAe;QAAE,eAAe,GAApG,KAAqH,CAAhC,eAAe;QAAE,cAAc,GAApH,KAAqH,CAAf,cAAc;;AACrI,QAAI,CAAC,WAAW,CAAC,CAAC,EAAE,cAAc,EAAE,iBAAiB,EAAE;AACrD,cAAQ,EAAE,iBAAiB;AAC3B,YAAM,EAAE,WAAW;AACnB,gBAAU,EAAE,eAAe;AAC3B,gBAAU,EAAE,eAAe;AAC3B,eAAS,EAAE,cAAc;KAC1B,CAAC,CAAC;GACJ;;AAGD,WAAS,eAAe,CAAC,QAAQ,EACjC;AACE,UAAM,CAAC,QAAQ,CAAC,KAAK,EAAE;AACrB,cAAQ,EAAE,QAAQ;AAClB,WAAK,EAAE,iBAAiB;AACxB,eAAS,EAAE,KAAK;AAChB,uBAAiB,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACjD,oBAAc,EAAE,MAAM,CAAC,KAAK;AAC5B,uBAAiB,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,GAAG,CAAC,CAAC;AAC1F,iBAAW,EAAE,iBAAiB,CAAC,IAAI;AACnC,qBAAe,EAAE,iBAAiB,CAAC,QAAQ;AAC3C,qBAAe,EAAE,GAAG;AACpB,oBAAc,EAAE,EAAE,GAAC,CAAC,GAAC,IAAI;KAC1B,EAAE,UAAC,IAAI,EAAK;AACX,YAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACtC,UAAI,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;KACrC,EAAE,SAAS,CAAC,CAAC;GACf;CAEF,CAAC;;AAEF,IAAM,iBAAiB,GAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,IAAI,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,IAAI,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,IAAI,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,IAAI,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC","file":"lib/plugins/digging.js","sourcesContent":["const Vec3 = require(\"vec3\").Vec3;\n\nmodule.exports.player=function(player,serv)\n{\n\n  function cancelDig({position, block}) {\n    player.sendBlock(position, block.type, block.metadata);\n  }\n\n  player._client.on(\"block_dig\",async ({location,status,face}) => {\n    let pos=new Vec3(location.x,location.y,location.z);\n\n    const directionVector=directionToVector[face];\n    const facedPos=pos.plus(directionVector);\n\n    try {\n      const facedBlock = await player.world.getBlock(facedPos);\n      let block;\n      if(facedBlock.name==\"fire\")\n      {\n        block=facedBlock;\n        pos=facedPos;\n      }\n      else block=await player.world.getBlock(pos);\n\n      currentlyDugBlock = block;\n      if (currentlyDugBlock.type == 0) return;\n      if (status == 0 && player.gameMode != 1)\n        player.behavior('dig', { // Start dig survival\n          position: pos,\n          block: block\n        }, ({position}) => {\n          return startDigging(position);\n        }, cancelDig);\n      else if (status == 2)\n        completeDigging(pos);\n      else if (status == 1)\n        player.behavior('cancelDig', { // Cancel dig survival\n          position: pos,\n          block: block\n        }, ({position}) => {\n          return cancelDigging(position);\n        });\n      else if (status == 0 && player.gameMode == 1)\n        return creativeDigging(pos);\n    }\n    catch(err) {\n      setTimeout(() => {throw err;},0);\n    }\n  });\n\n  function diggingTime()\n  {\n    // assume holding nothing and usual conditions\n    return currentlyDugBlock.digTime();\n  }\n\n  let currentlyDugBlock;\n  let startDiggingTime;\n  let animationInterval;\n  let expectedDiggingTime;\n  let lastDestroyState;\n  let currentAnimationId;\n  function startDigging(location)\n  {\n    serv.entityMaxId++;\n    currentAnimationId=serv.entityMaxId;\n    expectedDiggingTime=diggingTime(location);\n    lastDestroyState=0;\n    startDiggingTime=new Date();\n    updateAnimation();\n    animationInterval=setInterval(updateAnimation,100);\n    function updateAnimation()\n    {\n      const currentDiggingTime=new Date()-startDiggingTime;\n      let newDestroyState=Math.floor(9*currentDiggingTime/expectedDiggingTime);\n      newDestroyState=newDestroyState>9 ? 9 : newDestroyState;\n      if(newDestroyState!=lastDestroyState)\n      {\n        player.behavior('breakAnimation', {\n          lastState: lastDestroyState,\n          state: newDestroyState,\n          start: startDigging,\n          timePassed: currentDiggingTime,\n          position: location\n        }, ({state}) => {\n          lastDestroyState=state;\n          player._writeOthersNearby(\"block_break_animation\",{\n            \"entityId\":currentAnimationId,\n            \"location\":location,\n            \"destroyStage\":state\n          });\n        })\n      }\n    }\n  }\n\n  function cancelDigging(location)\n  {\n    clearInterval(animationInterval);\n    player._writeOthersNearby(\"block_break_animation\",{\n      \"entityId\":currentAnimationId,\n      \"location\":location,\n      \"destroyStage\":-1\n    });\n  }\n\n  async function completeDigging(location)\n  {\n    clearInterval(animationInterval);\n    const diggingTime=new Date()-startDiggingTime;\n    let stop = false;\n    if(expectedDiggingTime-diggingTime<100) {\n      stop = player.behavior('forceCancelDig', {\n        stop: true,\n        start: startDiggingTime,\n        time: diggingTime\n      }).stop;\n    }\n    if(!stop) {\n      player.behavior('dug', {\n        position: location,\n        block: currentlyDugBlock,\n        dropBlock: true,\n        blockDropPosition: location.offset(0.5, 0.5, 0.5),\n        blockDropWorld: player.world,\n        blockDropVelocity: new Vec3(Math.random()*4 - 2, Math.random()*2 + 2, Math.random()*4 - 2),\n        blockDropId: currentlyDugBlock.type,\n        blockDropDamage: currentlyDugBlock.metadata,\n        blockDropPickup: 500,\n        blockDropDeath: 60*5*1000\n      }, (data) => {\n        player.changeBlock(data.position,0,0);\n        if (data.dropBlock) dropBlock(data);\n      }, cancelDig)\n    }\n    else\n    {\n      player._client.write(\"block_change\",{\n        location:location,\n        type:currentlyDugBlock.type<<4\n      });\n    }\n  }\n\n  function dropBlock({blockDropPosition, blockDropWorld, blockDropVelocity, blockDropId, blockDropDamage, blockDropPickup, blockDropDeath}) {\n    serv.spawnObject(2, blockDropWorld, blockDropPosition, {\n      velocity: blockDropVelocity,\n      itemId: blockDropId,\n      itemDamage: blockDropDamage,\n      pickupTime: blockDropPickup,\n      deathTime: blockDropDeath\n    });\n  }\n\n\n  function creativeDigging(location)\n  {\n    player.behavior('dug', {\n      position: location,\n      block: currentlyDugBlock,\n      dropBlock: false,\n      blockDropPosition: location.offset(0.5, 0.5, 0.5),\n      blockDropWorld: player.world,\n      blockDropVelocity: new Vec3(Math.random()*4 - 2, Math.random()*2 + 2, Math.random()*4 - 2),\n      blockDropId: currentlyDugBlock.type,\n      blockDropDamage: currentlyDugBlock.metadata,\n      blockDropPickup: 500,\n      blockDropDeath: 60*5*1000\n    }, (data) => {\n      player.changeBlock(data.position,0,0);\n      if (data.dropBlock) dropBlock(data);\n    }, cancelDig);\n  }\n\n};\n\nconst directionToVector=[new Vec3(0,-1,0),new Vec3(0,1,0),new Vec3(0,0,-1),new Vec3(0,0,1),new Vec3(-1,0,0),new Vec3(1,0,0)];"],"sourceRoot":"/source/"}