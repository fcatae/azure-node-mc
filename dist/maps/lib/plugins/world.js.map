{"version":3,"sources":["lib/plugins/world.js"],"names":[],"mappings":"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","file":"lib/plugins/world.js","sourcesContent":["const spiralloop = require('spiralloop');\n\nconst World = require('prismarine-world');\nconst WorldSync = require(\"prismarine-world-sync\");\n\nconst generations=require(\"flying-squid\").generations;\nimport {fs} from 'node-promise-es6';\nimport {level} from 'prismarine-provider-anvil';\n\nmodule.exports.server=async function(serv,{worldFolder,generation={\"name\":\"diamond_square\",\"options\":{\"worldHeight\":80}}}={}) {\n  const newSeed=generation.options.seed || Math.floor(Math.random()*Math.pow(2, 31));\n  let seed;\n  let regionFolder;\n  if(worldFolder) {\n    regionFolder = worldFolder + \"/region\";\n    try {\n      const stats = await fs.stat(regionFolder);\n    }\n    catch (err) {\n      await fs.mkdir(regionFolder);\n    }\n\n    try {\n      const levelData = await level.readLevel(worldFolder + \"/level.dat\");\n      seed = levelData[\"RandomSeed\"][0];\n    }\n    catch (err) {\n      seed = newSeed;\n      await level.writeLevel(worldFolder + \"/level.dat\", {\"RandomSeed\": [seed, 0]});\n    }\n  }\n  else\n    seed=newSeed;\n  generation.options.seed=seed;\n  serv.emit(\"seed\",generation.options.seed);\n  serv.overworld = new World(generations[generation.name](generation.options), regionFolder);\n  serv.netherworld = new World(generations[\"nether\"]({}));\n  //serv.endworld = new World(generations[\"end\"]({}));\n\n  serv._worldSync=new WorldSync(serv.overworld);\n\n  // WILL BE REMOVED WHEN ACTUALLY IMPLEMENTED\n  serv.overworld.blockEntityData = {};\n  serv.netherworld.blockEntityData = {};\n  serv.overworld.portals = [];\n  serv.netherworld.portals = [];\n  //////////////\n\n  serv.pregenWorld = (world, size=3) => {\n    const promises = [];\n    for (let x = -size; x < size; x++) {\n      for (let z = -size; z < size; z++) {\n        promises.push(world.getColumn(x, z));\n      }\n    }\n    return Promise.all(promises);\n  };\n\n  serv.setBlock = async (world,position,blockType,blockData) =>\n  {\n    serv.players\n      .filter(p => p.world==world)\n      .forEach(player => player.sendBlock(position, blockType, blockData));\n\n    await world.setBlockType(position,blockType);\n    await world.setBlockData(position,blockData);\n  };\n\n  //serv.pregenWorld(serv.overworld).then(() => serv.log('Pre-Generated Overworld'));\n  //serv.pregenWorld(serv.netherworld).then(() => serv.log('Pre-Generated Nether'));\n};\n\nmodule.exports.player=function(player,serv,settings) {\n\n  player.unloadChunk = (chunkX,chunkZ) =>\n  {\n    delete player.loadedChunks[chunkX+\",\"+chunkZ];\n    player._client.write('map_chunk', {\n      x: chunkX,\n      z: chunkZ,\n      groundUp: true,\n      bitMap: 0x0000,\n      chunkData: new Buffer(0)\n    });\n  };\n\n  player.sendChunk = (chunkX,chunkZ,column) =>\n  {\n    return player.behavior('sendChunk', {\n      x: chunkX,\n      z: chunkZ,\n      chunk: column\n    }, ({x, z, chunk}) => {\n      player._client.write('map_chunk', {\n        x: x,\n        z: z,\n        groundUp: true,\n        bitMap: 0xffff,\n        chunkData: chunk.dump()\n      });\n      return Promise.resolve();\n    })\n  };\n\n  function spiral(arr)\n  {\n    const t=[];\n    spiralloop(arr,(x,z) => {\n      t.push([x,z]);\n    });\n    return t;\n  }\n\n  player.sendNearbyChunks = (view,group) =>\n  {\n    player.lastPositionChunkUpdated=player.position;\n    const playerChunkX=Math.floor(player.position.x/16/32);\n    const playerChunkZ=Math.floor(player.position.z/16/32);\n\n    Object.keys(player.loadedChunks)\n      .map((key) => key.split(\",\").map(a => parseInt(a)))\n      .filter(([x,z]) => Math.abs(x-playerChunkX)>view || Math.abs(z-playerChunkZ)>view)\n      .forEach(([x,z]) => player.unloadChunk(x,z));\n\n    return spiral([view*2,view*2])\n      .map(t => ({\n        chunkX:playerChunkX+t[0]-view,\n        chunkZ:playerChunkZ+t[1]-view\n      }))\n      .filter(({chunkX,chunkZ}) => {\n        const key=chunkX+\",\"+chunkZ;\n        const loaded=player.loadedChunks[key];\n        if(!loaded) player.loadedChunks[key]=1;\n        return !loaded;\n      })\n      .reduce((acc,{chunkX,chunkZ})=> {\n          const p=acc\n            .then(() => player.world.getColumn(chunkX, chunkZ))\n            .then((column) => player.sendChunk(chunkX, chunkZ, column));\n           return group ? p.then(() => sleep(5)) : p;\n        }\n      ,Promise.resolve());\n  };\n\n  function sleep(ms = 0) {\n    return new Promise(r => setTimeout(r, ms));\n  }\n\n  player.sendMap = () =>\n  {\n    return player.sendNearbyChunks(Math.min(3,settings[\"view-distance\"]))\n      .catch((err) => setTimeout(() => { throw err; }), 0);\n  };\n\n  player.sendRestMap = () =>\n  {\n    player.sendingChunks=true;\n    player.sendNearbyChunks(Math.min(player.view,settings[\"view-distance\"]),true)\n      .then(() => player.sendingChunks=false)\n      .catch((err)=> setTimeout(() => {throw err;},0));\n  };\n\n  player.sendSpawnPosition = () =>\n  {\n    player._client.write('spawn_position',{\n      \"location\":player.spawnPoint\n    });\n  };\n\n  player.changeWorld = async (world, opt) => {\n    if(player.world == world) return Promise.resolve();\n    opt = opt || {};\n    player.world = world;\n    player.loadedChunks={};\n    if (typeof opt.gamemode != 'undefined') player.gameMode = opt.gamemode;\n    player._client.write(\"respawn\",{\n      dimension: opt.dimension || 0,\n      difficulty: opt.difficulty || 0,\n      gamemode: opt.gamemode || player.gameMode,\n      levelType:'default'\n    });\n    await player.findSpawnPoint();\n    player.position=player.spawnPoint.toFixedPosition();\n    player.sendSpawnPosition();\n    player.updateAndSpawn();\n\n    await player.sendMap();\n\n    player.sendSelfPosition();\n    player.emit('change_world');\n\n    await player.waitPlayerLogin();\n    player.sendRestMap();\n\n  };\n\n  player.commands.add({\n    base: 'changeworld',\n    info: 'to change world',\n    usage: '/changeworld overworld|nether',\n    op: true,\n    action(world) {\n      if(world==\"nether\") player.changeWorld(serv.netherworld, {dimension: -1});\n      if(world==\"overworld\") player.changeWorld(serv.overworld, {dimension: 0});\n    }\n  });\n};"],"sourceRoot":"/source/"}