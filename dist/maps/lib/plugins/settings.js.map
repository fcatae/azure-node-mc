{"version":3,"sources":["lib/plugins/settings.js"],"names":[],"mappings":";;;;AAAA,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;;AAGlC,SAAS,SAAS,CAAE,GAAG,EAAE,IAAI,EAAE;AAC7B,SAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,GAAG,GAAG,CAAA,AAAC,GAAG,GAAG,CAAC,CAAC;CACvD;;AAED,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,UAAS,IAAI,EAAC,QAAQ,EAC5C;;;AACE,MAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC,QAAQ,CAAC;;AAEhC,WAAe,aAAa,CAAC,KAAK,EAAC,YAAY;QAEzC,KAAK,EAKD,CAAC;;;;AALL,eAAK,GAAC,YAAY;;;;2CACR,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;;;;;kCAAI,CAAC;;;;;AAC1C,eAAK,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;;;;;eACvB,IAAI;;;;;;2CAEM,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;;;AAAjC,WAAC;;gBACJ,CAAC,IAAE,CAAC,IAAI,CAAC,IAAE,CAAC,CAAA;;;;;;;;AAEf,eAAK,GAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;;;;;;2CAEf,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;;;;;kCAAG,CAAC;;;;;AACxC,eAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;;;;;8CAEzB,KAAK;;;;;;;GACb;;AAED,MAAI,CAAC,aAAa,GAAG,oBAAO,KAAK;;;;;2CAChB,aAAa,CAAC,KAAK,EAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC,EAAE,EAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC;;;;;;;;;;GACjF,CAAC;CACH,CAAC;;AAGF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,oBAAe,MAAM,EAAC,IAAI;;;;;;AAE9C,cAAM,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,CAAC;AAC9B,cAAM,CAAC,cAAc,GAAC;;;;;iDACI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;;;AAAxD,sBAAM,CAAC,UAAU;;;;;;;SAClB,CAAC;AACF,cAAM,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,EAAC,UAAC,IAAc,EAAK;cAAlB,YAAY,GAAb,IAAc,CAAb,YAAY;;AACzC,gBAAM,CAAC,IAAI,GAAC,YAAY,CAAC;SAC1B,CAAC,CAAC;;;;;;;CACJ,CAAC","file":"lib/plugins/settings.js","sourcesContent":["const Vec3 = require(\"vec3\").Vec3;\n\n\nfunction randomInt (low, high) {\n  return Math.floor(Math.random() * (high - low) + low);\n}\n\nmodule.exports.server=function(serv,settings)\n{\n  serv.gameMode=settings.gameMode;\n\n  async function findSpawnZone(world,initialPoint)\n  {\n    let point=initialPoint;\n    while((await (world.getBlockType(point)))==0)\n      point=point.offset(0,-1,0);\n    while(true)\n    {\n      const p=await world.getBlockType(point);\n      if(p!=8 && p!=9)\n        break;\n      point=point.offset(1,0,0);\n    }\n    while((await world.getBlockType(point))!=0)\n      point = point.offset(0, 1, 0);\n\n    return point;\n  }\n\n  serv.getSpawnPoint = async (world) =>  {\n      return await findSpawnZone(world,new Vec3(randomInt(0,30),81,randomInt(0,30)));\n  };\n};\n\n\nmodule.exports.player=async function(player,serv)\n{\n  player.gameMode=serv.gameMode;\n  player.findSpawnPoint=async () => {\n    player.spawnPoint=await serv.getSpawnPoint(player.world);\n  };\n  player._client.on('settings',({viewDistance}) => {\n    player.view=viewDistance;\n  });\n};"],"sourceRoot":"/source/"}