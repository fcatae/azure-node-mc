{"version":3,"sources":["lib/plugins/moderation.js"],"names":[],"mappings":"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","file":"lib/plugins/moderation.js","sourcesContent":["const moment=require(\"moment\");\nconst rp=require(\"request-promise\");\nconst nodeUuid=require('node-uuid');\n\nmodule.exports.server=function(serv)\n{\n\n  serv.ban = (uuid, reason) => {\n    serv.bannedPlayers[uuid] = {\n      time: +moment(),\n      reason: reason || \"Your account is banned!\"\n    };\n  };\n  serv.banIP = (IP, reason) => {\n    serv.bannedIPs[IP] = {\n      time: +moment(),\n      reason: reason || \"Your IP is banned!\"\n    };\n    Object.keys(serv.players)\n      .filter(uuid => serv.players[uuid]._client.socket.remoteAddress == IP)\n      .forEach(uuid => serv.players[uuid].kick(serv.bannedIPs[serv.players[uuid]._client.socket.remoteAddress].reason));\n  };\n\n  function uuidInParts(plainUUID)\n  {\n    return nodeUuid.unparse(nodeUuid.parse(plainUUID));\n  }\n\n  serv.getUUIDFromUsername =  username => {\n    return rp('https://api.mojang.com/users/profiles/minecraft/' + username)\n      .then((body) => {\n        if(!body) throw new Error(\"username not found\");\n        return uuidInParts(JSON.parse(body).id)\n      })\n      .catch(err => {throw err;});\n  };\n\n  serv.banUsername = (username, reason) => {\n    return serv.getUUIDFromUsername(username)\n      .then(uuid => serv.ban(uuid, reason));\n  };\n\n  serv.pardonUsername = (username) => {\n    return serv.getUUIDFromUsername(username)\n      .then(pardon);\n  };\n  \n  serv.pardonIP = (IP) => {\n    return serv.bannedIPs[IP] ? delete serv.bannedIPs[IP] : false\n  };\n\n  function pardon(uuid) {\n    if (serv.bannedPlayers[uuid]) {\n      delete serv.bannedPlayers[uuid];\n      return true;\n    }\n    return false;\n  }\n\n  serv.bannedPlayers = {};\n  serv.bannedIPs = {};\n};\n\nmodule.exports.player=function(player,serv)\n{\n  player.kick = (reason=\"You were kicked!\") =>\n    player._client.end(reason);\n\n  player.ban = reason => {\n    reason = reason || \"You were banned!\";\n    player.kick(reason);\n    const uuid=player._client.uuid;\n    serv.ban(uuid, reason);\n  };\n  player.banIP = reason => {\n    reason = reason || \"You were IP banned!\";\n    player.kick(reason);\n    serv.banIP(player._client.socket.remoteAddress)\n  };\n\n  player.pardon = () => serv.pardon(player._client.uuid);\n\n\n\n  player.commands.add({\n    base: 'kick',\n    info: 'to kick a player',\n    usage: '/kick <player> [reason]',\n    op: true,\n    parse(str) {\n      if(!str.match(/([a-zA-Z0-9_]+)(?: (.*))?/))\n        return false;\n      const parts = str.split(' ');\n      return {\n        username:parts.shift(),\n        reason:parts.join(' ')\n      };\n    },\n    action({username,reason}) {\n      const kickPlayer = serv.getPlayer(username);\n      if (!kickPlayer) {\n        player.chat(username + \" is not on this server!\");\n      } else {\n        kickPlayer.kick(reason);\n        kickPlayer.emit(\"kicked\", player, reason);\n      }\n    }\n  });\n\n  player.commands.add({\n    base: 'ban',\n    info: 'to ban a player',\n    usage: '/ban <player> [reason]',\n    op: true,\n    parse(str) {\n      if(!str.match(/([a-zA-Z0-9_]+)(?: (.*))?/))\n        return false;\n      const parts = str.split(' ');\n      return {\n        username:parts.shift(),\n        reason:parts.join(' ')\n      };\n    },\n    action({username,reason}) {\n      const banPlayer = serv.getPlayer(username);\n\n      if (!banPlayer) {\n        serv.banUsername(username, reason)\n          .then(() => {\n            serv.emit('banned', player, username, reason);\n            player.chat(username + ' was banned');\n          })\n          .catch(err => player.chat(username + \" is not a valid player!\"));\n      } else {\n        banPlayer.ban(reason);\n        serv.emit(\"banned\", player, username, reason);\n      }\n    }\n  });\n  \n  player.commands.add({\n    base: 'ban-ip',\n    info: 'bans a specific IP',\n    usage: '/ban-ip <ip> [reason]',\n    op: true,\n    parse(str){\n      const argv = str.split(' ');\n      if(argv.length < 1) return;\n      \n      return {\n        IP: argv.shift(),\n        reason: argv.shift()\n      }\n    },\n    action({IP, reason}){\n      serv.banIP(IP, reason);\n      player.chat(\"\" + IP + \" was IP banned\")\n    }\n  });\n\n  player.commands.add({\n    base: 'pardon-ip',\n    info: 'to pardon a player by ip',\n    usage: '/pardon-ip <ip>',\n    op: true,\n    action(IP) {\n      const result=serv.pardonIP(IP);\n      player.chat(result ? IP + \" was IP pardoned\" : IP+\" is not banned\");\n    }\n  });\n\n  player.commands.add({\n    base: 'pardon',\n    info: 'to pardon a player',\n    usage: '/pardon <player>',\n    op: true,\n    parse(str) {\n      if(!str.match(/([a-zA-Z0-9_]+)/))\n        return false;\n      return str;\n    },\n    action(nick) {\n      serv.pardonUsername(nick)\n        .then(()=> player.chat(nick + \" is unbanned\"))\n        .catch(err => player.chat(nick + \" is not banned\"));\n    }\n  });\n\n  player.commands.add({\n    base: 'op',\n    info: 'op any player',\n    usage: '/op <player>',\n    op: true,\n    parse(str) {\n      if (!str.match(/([a-zA-Z0-9_]+)/)) return false;\n      return str;\n    },\n    action(username) {\n      const user = serv.getPlayer(username);\n      if (!user) return 'That player is not on the server.';\n      user.op = true;\n      player.chat(username + ' is opped');\n    }\n  });\n\n  player.commands.add({\n    base: 'deop',\n    info: 'deop any player',\n    usage: '/deop <player>',\n    op: true,\n    parse(str) {\n      if (!str.match(/([a-zA-Z0-9_]+)/)) return false;\n      return str;\n    },\n    action(username) {\n      const user = serv.getPlayer(username);\n      if (!user) return 'That player is not on the server.';\n      user.op = false;\n      player.chat(username + ' is deopped');\n    }\n  });\n};"],"sourceRoot":"/source/"}