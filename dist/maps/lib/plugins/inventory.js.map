{"version":3,"sources":["lib/plugins/inventory.js"],"names":[],"mappings":"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","file":"lib/plugins/inventory.js","sourcesContent":["const version = require(\"flying-squid\").version;\nconst windows = require(\"prismarine-windows\")(version).windows;\nconst Item = require(\"prismarine-item\")(version);\n\nmodule.exports.player = function(player,serv)\n{\n  player.heldItemSlot = 0;\n  player.heldItem = new Item(256, 1);\n  player.inventory = new windows.InventoryWindow(0, \"Inventory\", 44);\n  \n  player._client.on(\"held_item_slot\", ({slotId} = {}) => {\n    player.heldItemSlot = slotId;\n    player.setEquipment(0,player.inventory.slots[36 + player.heldItemSlot]);\n\n    player._writeOthersNearby(\"entity_equipment\",{\n        entityId: player.id,\n        slot: 0,\n        item: Item.toNotch(player.heldItem)\n    });\n  });\n  \n  player._client.on(\"window_click\", function(clickInfo){\n    // Do other stuff the inventory doesn't do, eg spawn the dropped item.\n    // I've left in stuff that inventory handles, because the cancelling hooks\n    // might go here (?)\n    switch(clickInfo.mode){\n      case 0:\n        if(clickInfo.mouseButton == 0){\n          // Left mouse click\n          // Inventory deals with this\n        }else{\n          // Right mouse click\n          // Inventory deals with this\n        }\n      break;\n      \n      case 1:\n        if(clickInfo.mouseButton == 0){\n          // Shift + Left click\n          // Inventory deals with this\n          return;\n        }else{\n          // Shift + right click\n          // Inventory deals with this\n          return;\n        }\n      break;\n      \n      case 2:\n        // button 0 -> 8, indication hotbar switching items\n        // (Nothing to do with held_item_slot)\n        // DANGER! crashes because windows.js hasn't implemented it yet.\n        return;\n      break;\n      \n      case 3:\n        // Middle click\n        // DANGER! crashes because windows.js hasn't implemented it yet.\n        return;\n      break;\n      \n      case 4:\n        if(clickInfo.slot == -999){\n          // Click with nothing outside window. Do nothing.\n        }else{\n          // I'd love to implement this, but dropped entities are not finished.\n          if(clickInfo.mouseButton == 0){\n            // Drop one item at slot\n            // Inventory handles removing one\n            return;\n          }else{\n            // Drop full stack at slot\n            // Inventory handles removing the whole stack\n            return;\n          }\n        }\n      break;\n      \n      // Inventory does not support dragging yet, so not implementing yet.\n      case 5:\n        if(clickInfo.slot == -999){\n          switch(clickInfo.mouseButton){\n            case 0:\n              // Start left mouse drag\n              return;\n            break;\n            \n            case 4:\n              // Start right mouse drag\n              return;\n            break;\n            \n            case 2:\n              // End left mouse drag\n              return;\n            break;\n            \n            case 6:\n              // End right mouse drag\n              return;\n            break;\n          }\n        }else{\n          switch(clickInfo.mouseButton){\n            case 1:\n              // Add slot for left mouse drag\n              return;\n            break;\n            \n            case 5:\n              // Add slot for right mouse drag\n              return;\n            break;\n          }\n        }\n      break;\n      \n      // Inventory does not support double click yet, so not implementing yet.\n      case 6:\n        // Double click\n        return;\n      break;\n    }\n    \n    // Let the inventory know of the click.\n    // It's important to let it know of the click later, because it destroys\n    // information we need about the inventory.\n    try {\n      player.inventory.acceptClick(clickInfo)\n    }\n    catch(err) {\n      serv.emit('error',err);\n    }\n  });\n  \n  player._client.on(\"set_creative_slot\", ({slot,item} ={}) => {\n    if(item.blockId == -1){\n      player.inventory.updateSlot(slot, undefined);\n      return;\n    }\n\n    const newItem = Item.fromNotch(item);\n    player.inventory.updateSlot(slot, newItem);\n  });\n  \n  player.inventory.on(\"windowUpdate\", function(slot,oldItem,newItem){\n\n    const equipments={\n      5:4,\n      6:3,\n      7:2,\n      8:1\n    };\n    equipments[player.heldItemSlot]=0;\n    if(equipments[slot]!==undefined) {\n      player.setEquipment(equipments[slot],newItem);\n      player._writeOthersNearby(\"entity_equipment\", {\n        entityId: player.id,\n        slot: equipments[slot],\n        item: Item.toNotch(newItem)\n      });\n    }\n\n    player._client.write(\"set_slot\", {\n      windowId: 0,\n      slot: slot,\n      item: Item.toNotch(newItem)\n    });\n  });\n\n\n\n  player.collect = (collectEntity) => {\n\n    // Add it to a stack already in the player's inventory if possible\n    for(let itemKey=0;itemKey<player.inventory.slots.length;itemKey++) {\n      const item = player.inventory.slots[itemKey];\n      if(item == undefined) continue;\n      if(item.type == collectEntity.itemId){\n        item.count += 1;\n        player.inventory.updateSlot(itemKey, item);\n        collectEntity._writeOthersNearby('collect', {\n          collectedEntityId: collectEntity.id,\n          collectorEntityId: player.id\n        });\n        player.playSoundAtSelf('random.pop');\n        collectEntity.destroy();\n        return;\n      }\n    }\n\n    // If we couldn't add it to a already existing stack, put it in a new stack if the inventory has room\n    const emptySlot = player.inventory.firstEmptyInventorySlot();\n    if(emptySlot != null){\n      collectEntity._writeOthersNearby('collect', {\n        collectedEntityId: collectEntity.id,\n        collectorEntityId: player.id\n      });\n      player.playSoundAtSelf('random.pop');\n\n      const newItem =  new Item(collectEntity.itemId, 1, collectEntity.damage);\n      player.inventory.updateSlot(emptySlot, newItem);\n      collectEntity.destroy()\n    }\n  };\n};\n"],"sourceRoot":"/source/"}