{"version":3,"sources":["lib/plugins/log.js"],"names":[],"mappings":";;AAAA,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACzB,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7D,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,IAAM,MAAM,GAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,UAAS,IAAI,EAAC,QAAQ,EAC5C;AACE,MAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAA,KAAK;WAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAC,KAAK,CAAC,KAAK,CAAC;GAAA,CAAC,CAAC;AACnE,MAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,MAAM,EAAC,KAAK;WAAK,IAAI,CAAC,GAAG,CAAC,gBAAgB,GAAC,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,GAAC,KAAK,GAAC,KAAK,CAAC,KAAK,CAAC;GAAA,CAAC,CAAC;;AAEpJ,MAAI,CAAC,EAAE,CAAC,WAAW,EAAE,UAAA,IAAI;WAAI,IAAI,CAAC,GAAG,CAAC,mCAAmC,GAAC,IAAI,CAAC;GAAA,CAAC,CAAC;;AAEjF,MAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,MAAM,EAAC,cAAc,EAAC,MAAM;WAC7C,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,UAAU,GAAG,cAAc,IAAI,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,EAAE,CAAA,AAAC,CAAC;GAAA,CAAC,CAAC;;AAEjG,MAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAI;WAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAC,IAAI,CAAC;GAAA,CAAC,CAAC;;AAEnD,MAAM,OAAO,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,WAAW,GAAG,MAAM,CAAC,CAAC;;AAErD,MAAI,CAAC,GAAG,GAAG,UAAA,OAAO,EAAI;AACpB,WAAO,GAAC,MAAM,EAAE,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAC,GAAG,GAAC,OAAO,CAAC;AAC9D,QAAG,CAAC,QAAQ,CAAC,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACnD,QAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO;AAC9B,MAAE,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI,EAAE,UAAC,GAAG,EAAK;AAC9C,UAAI,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC3B,CAAC,CAAC;GACJ,CAAC;;AAEF,MAAI,CAAC,SAAS,GAAG,YAAM;AACrB,QAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO;AAC9B,UAAM,CAAC,MAAM,EAAE,UAAC,GAAG,EAAK;AACtB,UAAG,GAAG,EACN;AACE,eAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB,eAAO;OACR;;AAED,QAAE,CAAC,SAAS,CAAC,OAAO,EAAE,8BAA8B,EAClD,UAAC,GAAG,EAAK;AACP,YAAI,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;OAC3B,CAAC,CAAC;KACN,CAAC,CAAC;GACJ,CAAC;CACH,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAC,UAAS,MAAM,EAAC,IAAI,EAC1C;;AAEE,QAAM,CAAC,EAAE,CAAC,WAAW,EAAC;WAAM,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;GAAA,CAAC,CAAC;;AAEjI,QAAM,CAAC,EAAE,CAAC,SAAS,EAAC;WAAM,IAAI,CAAC,GAAG,CAAC,8CAA8C,CAAC;GAAA,CAAC,CAAC;;AAEpF,QAAM,CAAC,EAAE,CAAC,cAAc,EAAC;WAAM,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,GAAG,eAAe,CAAC;GAAA,CAAC,CAAC;;AAEzF,QAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAS;QAAR,OAAO,GAAR,IAAS,CAAR,OAAO;WAAM,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC;GAAA,CAAC,CAAC;;AAEpG,QAAM,CAAC,EAAE,CAAC,QAAQ,EAAC,UAAC,MAAM,EAAC,MAAM;WAC/B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,UAAU,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,EAAE,CAAA,AAAC,CAAC;GAAA,CAAC,CAAC;CAEnG,CAAC","file":"lib/plugins/log.js","sourcesContent":["const fs = require('fs');\nconst timeStarted = Math.floor(new Date() / 1000).toString();\nconst path = require('path');\nconst mkdirp = require('mkdirp');\nconst moment=require(\"moment\");\n\nmodule.exports.server=function(serv,settings)\n{\n  serv.on(\"error\", error => serv.log('[ERR]: Server: '+error.stack));\n  serv.on(\"clientError\", (client,error) => serv.log('[ERR]: Client '+client.socket.remoteAddress + ':' + client.socket.remotePort+' : '+error.stack));\n\n  serv.on(\"listening\", port => serv.log('[INFO]: Server listening on port '+port));\n\n  serv.on(\"banned\", (banner,bannedUsername,reason) =>\n    serv.log(banner.username + \" banned \" + bannedUsername + (reason ? \" (\" + reason + \")\" : \"\")));\n\n  serv.on(\"seed\", (seed) => serv.log(\"seed: \"+seed));\n\n  const logFile=path.join(\"logs\",timeStarted + \".log\");\n\n  serv.log = message => {\n    message=moment().format('MMMM Do YYYY, HH:mm:ss')+\" \"+message;\n    if(!settings.noConsoleOutput) console.log(message);\n    if (!settings.logging) return;\n    fs.appendFile(logFile, message + \"\\n\", (err) => {\n      if (err) console.log(err);\n    });\n  };\n\n  serv.createLog = () => {\n    if (!settings.logging) return;\n    mkdirp(\"logs\", (err) => {\n      if(err)\n      {\n        console.log(err);\n        return;\n      }\n\n      fs.writeFile(logFile, \"[INFO]: Started logging...\\n\",\n        (err) => {\n          if (err) console.log(err);\n        });\n    });\n  };\n};\n\nmodule.exports.player=function(player,serv)\n{\n\n  player.on(\"connected\",() => serv.log(\"[INFO]: \" + player.username + ' (' + player._client.socket.remoteAddress + ') connected'));\n\n  player.on(\"spawned\",() => serv.log(\"[INFO]: position written, player spawning...\"));\n\n  player.on(\"disconnected\",() => serv.log(\"[INFO]: \" + player.username + ' disconnected'));\n\n  player.on(\"chat\", ({message}) => serv.log(\"[INFO] \" + '<' + player.username + '>' + ' ' + message));\n\n  player.on(\"kicked\",(kicker,reason) =>\n    serv.log(kicker.username + \" kicked \" + player.username + (reason ? \" (\" + reason + \")\" : \"\")));\n\n};"],"sourceRoot":"/source/"}