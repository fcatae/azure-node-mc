{"version":3,"sources":["lib/plugins/external.js"],"names":[],"mappings":"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","file":"lib/plugins/external.js","sourcesContent":["module.exports.server = function(serv, settings) {\n  serv.plugins = {};\n  serv.pluginCount = 0;\n  serv.externalPluginsLoaded = false;\n\n  serv.addPlugin = (name, plugin, set) => {\n    if (!name || !plugin) throw new Error('You need a name and object for your plugin!');\n    serv.plugins[name] = {\n      id: serv.pluginCount,\n      name: name,\n      player: plugin.player,\n      entity: plugin.entity,\n      server: plugin.server,\n      settings: set,\n      enabled: true\n    };\n    serv.pluginCount++;\n    if (serv.externalPluginsLoaded && plugin.server) serv.plugins[name].server.call(p, serv, settings);\n  };\n\n  Object.keys(settings.plugins).forEach((p) =>{\n    if (settings.plugins[p].disabled) return;\n    try {\n      require.resolve(p); // Check if it exists, if not do catch, otherwise jump to bottom\n    } catch (err) {\n      try { // Throw error if cannot find plugin        \n        require.resolve('../../plugins/' + p);\n      } catch (err) {\n        throw new Error('Cannot find plugin \"' + p + '\"');\n      }\n      serv.addPlugin(p, require('../../plugins/' + p), settings.plugins[p]);\n      return;\n    }\n    serv.addPlugin(p, require(p), settings.plugins[p]);\n  });\n\n  Object.keys(serv.plugins).forEach((p) =>{\n    if (serv.plugins[p].server) serv.plugins[p].server.call(serv.plugins[p], serv, settings);\n  });\n\n  serv.on('asap', () => {\n    Object.keys(serv.plugins).map(p => serv.log('[PLUGINS] Loaded \"' + serv.plugins[p].name + '\"'));\n  });\n  \n  serv.externalPluginsLoaded = true;\n};\n\nmodule.exports.player = function(player, serv) {\n  Object.keys(serv.plugins).forEach(p => {\n    const plugin = serv.plugins[p];\n    if (plugin.player) plugin.player.call(plugin, player, serv);\n  });\n};\n\nmodule.exports.entity = function(entity, serv) {\n  entity.pluginData = {};\n\n  Object.keys(serv.plugins).forEach(p => {\n    entity.pluginData[p] = {};\n  });\n\n  entity.getData = (pluginName) => {\n    if (typeof pluginName == 'object') pluginName = pluginName.name;\n    return entity.pluginData[pluginName] || null;\n  };\n\n  Object.keys(serv.plugins).forEach(p => {\n    const plugin = serv.plugins[p];\n    if (plugin.entity) plugin.entity.call(plugin, entity, serv);\n  });\n};"],"sourceRoot":"/source/"}