{"version":3,"sources":["lib/worldGenerations/nether.js"],"names":[],"mappings":";;AAAA,IAAM,KAAK,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;AACjE,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;AAClC,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEpC,SAAS,UAAU,GAAqB;mEAAJ,EAAE;;MAAjB,IAAI,QAAJ,IAAI;wBAAC,KAAK;MAAL,KAAK,8BAAC,EAAE;;AAChC,WAAS,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE;AACrC,QAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAC,GAAG,GAAC,MAAM,GAAC,GAAG,GAAC,MAAM,CAAC,CAAC;AACzD,QAAM,KAAK,GAAC,IAAI,KAAK,EAAE,CAAC;AACxB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC3B,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC3B,YAAM,gBAAgB,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACzC,YAAM,mBAAmB,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5C,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;;AAC5B,cAAI,KAAK,YAAA,CAAC;AACV,cAAI,IAAI,YAAA,CAAC;;AAET,cAAI,CAAC,GAAG,mBAAmB,EAAE,KAAK,GAAG,CAAC,CAAC,KAClC,IAAI,CAAC,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,CAAC,KAC1B,IAAI,CAAC,GAAG,GAAG,GAAG,gBAAgB,EAAE,KAAK,GAAG,CAAC,CAAC;;AAE/C,cAAM,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B,cAAI,KAAK,EAAE,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC1C,cAAI,IAAI,EAAE,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;SAEzC;OACF;KACF;AACD,WAAO,KAAK,CAAC;GACd;AACD,SAAO,aAAa,CAAC;CACtB;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"lib/worldGenerations/nether.js","sourcesContent":["const Chunk = require('prismarine-chunk')(require(\"../version\"));\nconst Vec3 = require('vec3').Vec3;\nconst rand = require('random-seed');\n\nfunction generation({seed,level=50}={}) {\n  function generateChunk(chunkX, chunkZ) {\n    const seedRand = rand.create(seed+':'+chunkX+':'+chunkZ);\n    const chunk=new Chunk();\n    for (let x = 0; x < 16; x++) {\n      for (let z = 0; z < 16; z++) {\n        const bedrockheighttop = 1 + seedRand(4);\n        const bedrockheightbottom = 1 + seedRand(4);\n        for (let y = 0; y < 128; y++) { // Nether only goes up to 128\n          let block;\n          let data;\n\n          if (y < bedrockheightbottom) block = 7;\n          else if (y < level) block = 87;\n          else if (y > 127 - bedrockheighttop) block = 7;\n\n          const pos = new Vec3(x, y, z);\n          if (block) chunk.setBlockType(pos, block);\n          if (data) chunk.setBlockData(pos, data);\n          // Don't need to set light data in nether\n        }\n      }\n    }\n    return chunk;\n  }\n  return generateChunk;\n}\n\nmodule.exports = generation;"],"sourceRoot":"/source/"}