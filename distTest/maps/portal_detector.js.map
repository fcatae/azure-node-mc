{"version":3,"sources":["portal_detector.js"],"names":[],"mappings":"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","file":"portal_detector.js","sourcesContent":["const {detectFrame,findPotentialLines,findBorder,getAir,generateLine,generatePortal,makeWorldWithPortal}=require(\"flying-squid\").portal_detector;\nconst Vec3 = require(\"vec3\").Vec3;\nconst assert = require('chai').assert;\nconst range = require('range').range;\n\n\ndescribe(\"Generate portal\",function(){\n  it(\"generate a line\",() => {\n    assert.deepEqual(generateLine(new Vec3(3,1,1),new Vec3(1,0,0),2),[new Vec3(3, 1, 1), new Vec3(4, 1, 1)])\n  });\n  it(\"generate a portal\", () => {\n    assert.deepEqual(generatePortal(new Vec3(2,1,1),new Vec3(1,0,0),4,5),{\n      bottom:generateLine(new Vec3(3,1,1),new Vec3(1,0,0),2),\n      left:generateLine(new Vec3(2,2,1),new Vec3(0,1,0),3),\n      right:generateLine(new Vec3(5,2,1),new Vec3(0,1,0),3),\n      top:generateLine(new Vec3(3,5,1),new Vec3(1,0,0),2),\n      air:generateLine(new Vec3(3,2,1),new Vec3(0,1,0),3).concat(generateLine(new Vec3(4,2,1),new Vec3(0,1,0),3))\n    })\n  });\n});\n\ndescribe(\"Detect portal\", function() {\n  this.timeout(60 * 1000);\n  const portalData=[];\n  portalData.push({\n    name:\"simple portal frame x\",\n    bottomLeft:new Vec3(2,1,1),\n    direction:new Vec3(1,0,0),\n    width:4,\n    height:5,\n    additionalAir:[],\n    additionalObsidian:[]\n  });\n  portalData.push({\n    name:\"simple portal frame z\",\n    bottomLeft:new Vec3(2,1,1),\n    direction:new Vec3(0,0,1),\n    width:4,\n    height:5,\n    additionalAir:[],\n    additionalObsidian:[]\n  });\n  portalData.push({\n    name:\"big simple portal frame x\",\n    bottomLeft:new Vec3(2,1,1),\n    direction:new Vec3(1,0,0),\n    width:10,\n    height:10,\n    additionalAir:[],\n    additionalObsidian:[]\n  });\n  portalData.push({\n    name:\"simple portal frame x with borders\",\n    bottomLeft:new Vec3(2,1,1),\n    direction:new Vec3(1,0,0),\n    width:4,\n    height:5,\n    additionalAir:[],\n    additionalObsidian:[new Vec3(2,1,1),new Vec3(5,1,1),new Vec3(2,6,1),new Vec3(5,6,1)]\n  });\n  const {bottom,left,right,top,air}=generatePortal(new Vec3(2,1,2),new Vec3(1,0,0),4,5);\n\n  portalData.push({\n    name:\"2 portals\",\n    bottomLeft:new Vec3(2,1,1),\n    direction:new Vec3(1,0,0),\n    width:4,\n    height:5,\n    additionalAir:air,\n    additionalObsidian:[].concat.apply([], [bottom, left, right,top])\n  });\n\n\n  portalData.push({\n    name:\"huge simple portal frame z\",\n    bottomLeft:new Vec3(2,1,1),\n    direction:new Vec3(0,0,1),\n    width:50,\n    height:50,\n    additionalAir:[],\n    additionalObsidian:[]\n  });\n\n\n  portalData.forEach(({name,bottomLeft,direction,width,height,additionalAir,additionalObsidian}) => {\n    const portal=generatePortal(bottomLeft,direction,width,height);\n    const {bottom,left,right,top,air}=portal;\n    describe(\"Detect \"+name,() => {\n      const expectedBorder={bottom,left,right,top};\n\n      let world;\n      before(async function(){\n        world=await makeWorldWithPortal(portal,additionalAir,additionalObsidian);\n      });\n\n\n      describe(\"detect potential first lines\",function(){\n        it(\"detect potential first lines from bottom left\", async function() {\n          let potentialLines=await findPotentialLines(world,bottom[0],new Vec3(0,1,0));\n          assert.include(potentialLines,{\n              \"direction\": direction,\n              \"line\": bottom\n            });\n        });\n\n        it(\"detect potential first lines from bottom right\", async function() {\n          let potentialLines=await findPotentialLines(world,bottom[bottom.length-1],new Vec3(0,1,0));\n          assert.include(potentialLines,{\n              \"direction\": direction,\n              \"line\": bottom\n            });\n        });\n\n\n        it(\"detect potential first lines from top left\", async function() {\n          let potentialLines=await findPotentialLines(world,top[0],new Vec3(0,-1,0));\n          assert.include(potentialLines,{\n              \"direction\": direction,\n              \"line\": top\n            });\n        });\n\n        it(\"detect potential first lines from top right\", async function() {\n          let potentialLines=await findPotentialLines(world,top[top.length-1],new Vec3(0,-1,0));\n          assert.include(potentialLines,{\n              \"direction\": direction,\n              \"line\": top\n            });\n        });\n\n        it(\"detect potential first lines from left top\", async function() {\n          let potentialLines=await findPotentialLines(world,left[left.length-1],direction);\n          assert.include(potentialLines,{\n              \"direction\": new Vec3(0,1,0),\n              \"line\": left\n            });\n        });\n\n        it(\"detect potential first lines from right bottom\", async function() {\n          let potentialLines=await findPotentialLines(world,right[0],direction.scaled(-1));\n          assert.include(potentialLines,{\n              \"direction\": new Vec3(0,1,0),\n              \"line\": right\n            });\n        });\n      });\n\n\n      describe(\"find borders\",function() {\n        it(\"find borders from bottom\", async function () {\n          const border = await findBorder(world, {\n            \"direction\": direction,\n            \"line\": bottom\n          }, new Vec3(0, 1, 0));\n          assert.deepEqual(border, expectedBorder)\n        });\n\n        it(\"find borders from top\", async function () {\n          const border = await findBorder(world, {\n            \"direction\": direction,\n            \"line\": top\n          }, new Vec3(0, -1, 0));\n          assert.deepEqual(border, expectedBorder)\n        });\n\n        it(\"find borders from left\", async function () {\n          const border = await findBorder(world, {\n            \"direction\": new Vec3(0, 1, 0),\n            \"line\": left\n          },direction);\n          assert.deepEqual(border, expectedBorder)\n        });\n        it(\"find borders from right\", async function () {\n          const border = await findBorder(world, {\n            \"direction\": new Vec3(0, 1, 0),\n            \"line\": right\n          }, direction.scaled(-1));\n          assert.deepEqual(border, expectedBorder)\n        });\n      });\n\n      describe(\"detect portals\",function(){\n        it(\"detect portals from bottom left\",async function() {\n          const portals=await detectFrame(world,bottom[0],new Vec3(0,1,0));\n          assert.deepEqual(portals,[portal])\n        });\n        it(\"detect portals from top left\",async function() {\n          const portals=await detectFrame(world,top[0],new Vec3(0,-1,0));\n          assert.deepEqual(portals,[portal])\n        });\n        it(\"detect portals from right top\",async function() {\n          const portals=await detectFrame(world,right[right.length-1],direction.scaled(-1));\n          assert.deepEqual(portals,[portal])\n        })\n      });\n\n      it(\"get air\",function(){\n        const foundAir=getAir(expectedBorder);\n        assert.deepEqual(foundAir,air);\n      });\n    });\n  });\n\n\n});\n\n\ndescribe(\"Doesn't detect non-portal\",function() {\n  const portalData=[];\n\n  portalData.push({\n    name:\"simple portal frame x with one obsidian in the middle\",\n    bottomLeft:new Vec3(2,1,1),\n    direction:new Vec3(1,0,0),\n    width:5,\n    height:5,\n    additionalAir:[],\n    additionalObsidian:[new Vec3(4,3,1)]\n  });\n\n  portalData.forEach(({name,bottomLeft,direction,width,height,additionalAir,additionalObsidian}) => {\n    const portal = generatePortal(bottomLeft, direction, width, height);\n    const {bottom,left,right,top}=portal;\n    describe(\"Doesn't detect detect \" + name, () => {\n      let world;\n      before(async function () {\n        world=await makeWorldWithPortal(portal, additionalAir, additionalObsidian);\n      });\n\n      describe(\"doesn't detect portals\",function(){\n        it(\"doesn't detect portals from bottom left\",async function() {\n          const portals=await detectFrame(world,bottom[0],new Vec3(0,1,0));\n          assert.deepEqual(portals,[])\n        });\n        it(\"doesn't detect portals from top left\",async function() {\n          const portals=await detectFrame(world,top[0],new Vec3(0,-1,0));\n          assert.deepEqual(portals,[])\n        });\n        it(\"doesn't detect portals from right top\",async function() {\n          const portals=await detectFrame(world,right[right.length-1],direction.scaled(-1));\n          assert.deepEqual(portals,[])\n        })\n      });\n\n    });\n  });\n});\n"],"sourceRoot":"/source/"}