{"version":3,"sources":["mineflayer.js"],"names":[],"mappings":"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","file":"mineflayer.js","sourcesContent":["const net = require('net');\nconst mcServer=require(\"flying-squid\");\nconst settings = require('../config/default-settings');\nconst mineflayer = require(\"mineflayer\");\nconst assert = require('chai').assert;\nconst Vec3 = require('vec3').Vec3;\n\nfunction assertPosEqual(actual,expected) {\n  assert.isBelow(actual.distanceTo(expected),1,\"expected: \"+expected+\", actual: \"+actual+\"\\n\");\n}\nconst once = require('event-promise');\n\ndescribe(\"Server with mineflayer connection\", function()  {\n  this.timeout(10 * 60 * 1000);\n  let bot;\n  let bot2;\n  let serv;\n\n  async function onGround(bot)\n  {\n    await new Promise((cb) => {\n      const l=() => {\n        if(bot.entity.onGround) {\n          bot.removeListener(\"move\",l);\n          cb();\n        }\n      };\n      bot.on(\"move\",l);\n    });\n  }\n\n  async function waitMessage(bot,message) {\n    const msg1=await once(bot,'message');\n    assert.equal(msg1.extra[0].text,message);\n  }\n\n  async function waitMessages(bot,messages) {\n    const toReceive=messages.reduce((acc,message) => {\n      acc[message]=1;\n      return acc;\n    },{});\n    const received={};\n    return new Promise(cb => {\n      const listener=msg => {\n          const message=msg.extra[0].text;\n          if(!toReceive[message]) throw new Error(\"Received \"+message+\" , expected to receive one of \"+messages);\n          if(received[message]) throw new Error(\"Received \"+message+\" two times\");\n          received[message]=1;\n          if(Object.keys(received).length==messages.length)\n          {\n            bot.removeListener('message',listener);\n            cb();\n          }\n        };\n      bot.on('message',listener);\n    });\n  }\n\n  async function waitLoginMessage(bot) {\n    return Promise.all([waitMessages(bot,['bot joined the game.','bot2 joined the game.'])]);\n  }\n\n  beforeEach(async function () {\n    this.timeout(10 * 60 * 1000);\n    const options = settings;\n    options[\"online-mode\"]=false;\n    options[\"port\"]=25566;\n    options[\"view-distance\"]=2;\n    options[\"worldFolder\"]=undefined;\n\n    serv=mcServer.createMCServer(options);\n\n    await once(serv,\"listening\");\n    bot = mineflayer.createBot({\n      host: \"localhost\",\n      port: 25566,\n      username: \"bot\"\n    });\n    bot2 = mineflayer.createBot({\n      host: \"localhost\",\n      port: 25566,\n      username: \"bot2\"\n    });\n\n    await Promise.all([once(bot,'login'),once(bot2,'login')]);\n    bot.entity.onGround=false;\n    bot2.entity.onGround=false;\n  });\n\n  afterEach(async () => {\n    await serv.quit();\n  });\n\n  describe(\"actions\",() => {\n\n    function waitSpawnZone(bot,view)\n    {\n      const nbChunksExpected=(view*2)*(view*2);\n      let c=0;\n      return new Promise(cb => {\n        const listener=() => {\n          c++;\n          if(c==nbChunksExpected)\n          {\n            bot.removeListener('chunkColumnLoad',listener);\n            cb();\n          }\n        };\n        bot.on('chunkColumnLoad',listener);\n      });\n    }\n\n    it(\"can dig\",async function () {\n      this.timeout(10 * 60 * 1000);\n      await Promise.all([waitSpawnZone(bot,2),waitSpawnZone(bot2,2),onGround(bot),onGround(bot2)]);\n\n      const pos=bot.entity.position.offset(0,-1,0).floored();\n      bot.dig(bot.blockAt(pos));\n\n      let [,newBlock]=await once(bot2,'blockUpdate',{array:true});\n      assertPosEqual(newBlock.position,pos);\n      assert.equal(newBlock.type,0,\"block \"+pos+\" should have been dug\");\n    });\n\n\n    it(\"can place a block\",async function () {\n      this.timeout(10 * 60 * 1000);\n      await Promise.all([waitSpawnZone(bot,2),waitSpawnZone(bot2,2),onGround(bot),onGround(bot2)]);\n\n      const pos=bot.entity.position.offset(0,-2,0).floored();\n      bot.dig(bot.blockAt(pos));\n\n      let [oldBlock,newBlock]=await once(bot2,'blockUpdate',{array:true});\n      assertPosEqual(newBlock.position,pos);\n      assert.equal(newBlock.type,0,\"block \"+pos+\" should have been dug\");\n\n      bot.creative.setInventorySlot(36,new mineflayer.Item(1,1));\n      await new Promise((cb) => {\n        bot.inventory.on(\"windowUpdate\",(slot,oldItem,newItem) => {\n          if(slot==36 && newItem && newItem.type==1)\n            cb();\n        });\n      });\n\n      bot.placeBlock(bot.blockAt(pos.offset(0,-1,0)),new Vec3(0,1,0));\n\n      [oldBlock,newBlock]=await once(bot2,'blockUpdate',{array:true});\n      assertPosEqual(newBlock.position,pos);\n      assert.equal(newBlock.type,1,\"block \"+pos+\" should have been placed\");\n    });\n  });\n\n  describe(\"commands\",() => {\n\n    it(\"has an help command\", async () => {\n      await waitLoginMessage(bot);\n      bot.chat(\"/help\");\n      await once(bot,\"message\");\n    });\n    it(\"can use /particle\",async () => {\n      bot.chat(\"/particle 5 10 100 100 100\");\n      await once(bot._client,'world_particles');\n    });\n    it(\"can use /playsound\",async () => {\n      bot.chat('/playsound ambient.weather.rain');\n      await once(bot,'soundEffectHeard');\n    });\n\n    function waitDragon()\n    {\n      return new Promise((done) => {\n        const listener=(entity) => {\n          if(entity.name==\"EnderDragon\") {\n            bot.removeListener('entitySpawn',listener);\n            done();\n          }\n        };\n        bot.on('entitySpawn',listener);\n      });\n    }\n\n    it(\"can use /summon\",async () => {\n      bot.chat('/summon EnderDragon');\n      await waitDragon();\n    });\n    it(\"can use /kill\",async () => {\n      bot.chat('/summon EnderDragon');\n      await waitDragon();\n      bot.chat('/kill @e[type=EnderDragon]');\n      const entity=await once(bot,'entityDead');\n      assert.equal(entity.name,\"EnderDragon\");\n    });\n    describe(\"can use /tp\",() => {\n      it(\"can tp myself\", async () => {\n        bot.chat('/tp 2 3 4');\n        await once(bot,'forcedMove');\n        assertPosEqual(bot.entity.position, new Vec3(2, 3, 4));\n      });\n      it(\"can tp somebody else\",async () => {\n        bot.chat('/tp bot2 2 3 4');\n        await once(bot2,'forcedMove');\n        assertPosEqual(bot2.entity.position, new Vec3(2, 3, 4));\n      });\n      it(\"can tp to somebody else\",async () => {\n        await onGround(bot);\n        bot.chat('/tp bot2 bot');\n        await once(bot2,'forcedMove');\n        assertPosEqual(bot2.entity.position, bot.entity.position);\n      });\n      it(\"can tp with relative positions\",async () => {\n        await onGround(bot);\n        const initialPosition=bot.entity.position.clone();\n        bot.chat('/tp ~1 ~-2 ~3');\n        await once(bot,'forcedMove');\n        assertPosEqual(bot.entity.position,initialPosition.offset(1,-2,3));\n      });\n      it(\"can tp somebody else with relative positions\",async () => {\n        await Promise.all([onGround(bot),onGround(bot2)]);\n        const initialPosition=bot2.entity.position.clone();\n        bot.chat('/tp bot2 ~1 ~-2 ~3');\n        await once(bot2,'forcedMove');\n        assertPosEqual(bot2.entity.position,initialPosition.offset(1,-2,3));\n      });\n    });\n    it(\"can use /deop\",async () => {\n      await waitLoginMessage(bot);\n      bot.chat('/deop bot');\n      await waitMessage(bot,'bot is deopped');\n      bot.chat('/op bot');\n      await waitMessage(bot,'You do not have permission to use this command');\n      serv.getPlayer(\"bot\").op=true;\n    });\n    it(\"can use /setblock\",async() => {\n      await once(bot,'chunkColumnLoad');\n      bot.chat('/setblock 1 2 3 95 0');\n      let [,newBlock]=await once(bot,'blockUpdate:'+new Vec3(1,2,3),{array:true});\n      assert.equal(newBlock.type,95);\n    });\n    it(\"can use /xp\",async() => {\n      bot.chat('/xp 100');\n      await once(bot,\"experience\");\n      assert.equal(bot.experience.points,100);\n    });\n  });\n});\n"],"sourceRoot":"/source/"}